## Jenkins

CI/CD tool (continuous Integration and Continuous Deployment/delivery)
continuous integration - code will come from git and then we build it.
git code -> checkout -> build -> push -> deploy

jenkins requirment:- at least t2.medium
- It is made from java therefore it requires java to run.
https://www.jenkins.io/doc/book/installing/linux/#fedora --> aws installation
- we have 2 types of pipeline - declarative and scripted
- we use declarative because it is simple.
- there can be multi stage pipeline.
- no 2 stage can have same name.
- jenkins works on master and node/slave/worker


sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo dnf upgrade
# Add required dependencies for the jenkins package
sudo dnf install fontconfig java-17-amazon-corretto -y
sudo dnf install jenkins -y
sudo systemctl daemon-reload
sudo systemctl enable --now jenkins


adding parameter string
adding variables in ecr tag time stamp - plugin name - build timestamp

# Master Slave method
 make 2 instances 1 master and 2nd slave
 install jenkins on master and only java-17 on slave as we will require java to run jenkins on slave.
 in master go in jenkins then go to manage jenkins and go to nodes and click new node and fill info.
 launch method - launch agent vai ssh
 host - slave IP
 verification strategy - non veryfing V. S.

we can also create a slave directly from jenkins using cloud -> EC2 instance plugin.

#Q. How can we upgrade jenkins version?
Ans. we can use blue-green deploymnet.

# Sonar Qube (not used often)
command to run sonarqube as a container --> sudo docker run -d -p 9000:9000 -e SONARQUBE_WEB_JVM_OPTS="-Dsonar.property=value" sonarqube
- it is a code coverage tool. it is not a test tool.
- it is used to measure the quality of the code.
- works on port 9000.
- basic requirment --> CPU - 2 , memory - 4GB
- 
 plugin - 

# Command to run Jenkins as a docker container
- install docker and enable it first
- docker run -d --privileged -P --user root  -v /mnt:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock jenkins/jenkins
- if we want to run our jenkins file on jenkins container it should have:-
 1) their shoud be no sudo in command as the container does not have sudo.
 2) awscli should be installed in the container.
 3) yum will not work in the container as many docker images have ubuntu as base image so use apt to install.

https://github.com/LondheShubham153/django-notes-app.git

AKIA6K5V7M5MMXVPVKW7

S/dWtwG8Apz2CEN16TQxJFeyx6ilYUXf0YrTkh5d