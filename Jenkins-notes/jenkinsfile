//IF WE WANT TO RUN PIPLINE IN DOCKER AS A CONTAINER AND THE AGENT IS 'SLAVE'
pipeline {
    agent any
    stages {
        stage('git checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Pritam-Khergade/student-ui.git']]) 
            }
        }
        stage('sonar-scan') {
            steps {
                sh 'sudo yum install maven -y'
                sh '''

                    mvn clean verify sonar:sonar \
                    -Dsonar.projectKey=demo \
                    -Dsonar.projectName='demo' \
                    -Dsonar.host.url=http://13.127.173.164:32770 \
                    -Dsonar.token=sqp_59cd2ef3c431d38d74b69634a82d1eb12e67b493
                '''
            }
        }
        stage('build') {
            steps {
                sh'''
                sudo yum install docker -y 
                sudo systemctl start docker
                sudo systemctl enable docker

                '''
                sh 'sudo docker build -t student-ui .'
            }
        }
        stage('ecr push') {
            steps {
                sh '''
                aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 985539766104.dkr.ecr.ap-south-1.amazonaws.com
                sudo docker tag student-ui:latest 985539766104.dkr.ecr.ap-south-1.amazonaws.com/student-ui:${BRANCH}-${BUILD_TIMESTAMP}
                sudo docker push 985539766104.dkr.ecr.ap-south-1.amazonaws.com/student-ui:${BRANCH}-${BUILD_TIMESTAMP}
                '''
            }
        }
        stage('docker cleanup') {
            steps {
                sh ' sudo docker system prune -a -f'
            }
        }
    }
}


# Prerequisites
# - Docker should be installed on the Jenkins server.
# - Run - sudo apt update && sudo apt install docker.io -y && sudo usermod -aG docker $USER && newgrp docker && sudo usermod -aG docker jenkins
# - Download aws cli in the ec2 server and configure aws credentials.
# - Create IAM role for full access and give it to EC2.

pipeline {
    agent any
    stages {
        stage('git checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/prathamesh633/student-management-app.git']]) 
            }
        }
        stage('build') {
            steps {
                sh 'docker build -t student-app .'
            }
        }
        stage('ecr push') {
            steps {
                sh '''
                aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 397854062963.dkr.ecr.ap-south-1.amazonaws.com
                docker tag prathameshbhujade/nodejs-simple-wweb:latest 397854062963.dkr.ecr.ap-south-1.amazonaws.com/prathameshbhujade/nodejs-simple-wweb:latest
                docker push 397854062963.dkr.ecr.ap-south-1.amazonaws.com/prathameshbhujade/nodejs-simple-wweb:latest
                '''
            }
        }
        stage('docker cleanup') {
            steps {
                sh ' docker system prune -a -f'
            }
        }
    }
}