# Canary Deployment
- Canary deployment is a technique used in DevOps to gradually roll out a new version of an application to a small subset of users before releasing it to everyone. 
- This helps in reducing the risk of introducing bugs into production.

# Concept Overview
- Old version (v1) is already running in production.
- You deploy new version (v2) to a small percentage of users (called the canary).
- Monitor the performance and errors.
- If everything looks good → gradually increase traffic to v2.
- If errors increase → roll back to v1.

✅ Pros:
- Safer: only a small % of users are affected if there's a bug.
- Easy to monitor and adjust.

❌ Cons:
- Needs monitoring and traffic-splitting logic (e.g., service mesh).
- Slightly more complex setup.

# Using Kubernetes + Istio (or service mesh)
- Canary with service mesh lets you split traffic at the network layer.
- Deploy both versions:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-v1
spec:
  replicas: 3
  template:
    spec:
      containers:
      - name: app
        image: my-app:v1

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-v2
spec:
  replicas: 1
  template:
    spec:
      containers:
      - name: app
        image: my-app:v2

- Use Istio virtual service to control traffic split:

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-app
spec:
  hosts:
  - my-app.example.com
  http:
  - route:
    - destination:
        host: my-app-v1
      weight: 90
    - destination:
        host: my-app-v2
      weight: 10

- Increase weight gradually (e.g., 10% → 50% → 100%).